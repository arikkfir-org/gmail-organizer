receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        cors:
          # noinspection HttpUrlsUsage
          allowed_origins:
            - http://*
            - https://*
        endpoint: 0.0.0.0:4318

processors:
  batch:
    send_batch_max_size: 200
    send_batch_size: 200
    timeout: 5s

  memory_limiter:
    check_interval: 1s
    limit_percentage: 65
    spike_limit_percentage: 20

  resourcedetection:
    detectors: [ gcp ]
    timeout: 10s

  transform/collision:
    metric_statements:
      - context: datapoint
        statements:
          - set(datapoint.attributes["exported_location"], datapoint.attributes["location"])
          - delete_key(datapoint.attributes, "location")
          - set(datapoint.attributes["exported_cluster"], datapoint.attributes["cluster"])
          - delete_key(datapoint.attributes, "cluster")
          - set(datapoint.attributes["exported_namespace"], datapoint.attributes["namespace"])
          - delete_key(datapoint.attributes, "namespace")
          - set(datapoint.attributes["exported_job"], datapoint.attributes["job"])
          - delete_key(datapoint.attributes, "job")
          - set(datapoint.attributes["exported_instance"], datapoint.attributes["instance"])
          - delete_key(datapoint.attributes, "instance")
          - set(datapoint.attributes["exported_project_id"], datapoint.attributes["project_id"])
          - delete_key(datapoint.attributes, "project_id")

exporters:
  googlecloud:
  googlemanagedprometheus:

extensions:
  health_check:
    endpoint: 0.0.0.0:13133

service:
  extensions:
    - health_check
  pipelines:
    metrics/otlp:
      receivers:
        - otlp
      processors:
        - resourcedetection
        - transform/collision
        - memory_limiter
        - batch
      exporters:
        - googlemanagedprometheus
    traces:
      receivers:
        - otlp
      processors:
        - resourcedetection
        - memory_limiter
        - batch
      exporters:
        - googlecloud
  telemetry:
    logs:
      encoding: json
